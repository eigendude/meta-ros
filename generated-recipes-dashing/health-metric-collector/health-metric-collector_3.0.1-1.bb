# Generated by superflore -- DO NOT EDIT
#
# Copyright 2019 Open Source Robotics Foundation

inherit ros_distro_${ROS_DISTRO}
inherit ros_superflore_generated

DESCRIPTION = "Package providing a ROS node for sending health metrics to Cloudwatch Metrics"
AUTHOR = "AWS RoboMaker <ros-contributions@amazon.com>"
ROS_AUTHOR = "AWS RoboMaker <ros-contributions@amazon.com>"
HOMEPAGE = "https://wiki.ros.org"
SECTION = "devel"
LICENSE = "Apache-2.0"
LIC_FILES_CHKSUM = "file://package.xml;beginline=10;endline=10;md5=3dce4ba60d7e51ec64f3c3dc18672dd3"

ROS_CN = "health_metric_collector"
ROS_BPN = "health_metric_collector"

ROS_BUILD_DEPENDS = " \
    aws-common \
    aws-ros2-common \
    rclcpp \
    ros-monitoring-msgs \
"

ROS_BUILDTOOL_DEPENDS = " \
    ament-cmake-native \
"

ROS_EXPORT_DEPENDS = ""

ROS_BUILDTOOL_EXPORT_DEPENDS = ""

ROS_EXEC_DEPENDS = " \
    aws-common \
    launch \
    launch-ros \
    rclcpp \
    ros-monitoring-msgs \
"

# Currently informational only -- see http://www.ros.org/reps/rep-0149.html#dependency-tags.
ROS_TEST_DEPENDS = " \
    ament-cmake-gmock \
"

DEPENDS = "${ROS_BUILD_DEPENDS} ${ROS_BUILDTOOL_DEPENDS}"
# Bitbake doesn't support the "export" concept, so build them as if we needed them to build this package (even though we actually
# don't) so that they're guaranteed to have been staged should this package appear in another's DEPENDS.
DEPENDS += "${ROS_EXPORT_DEPENDS} ${ROS_BUILDTOOL_EXPORT_DEPENDS}"

RDEPENDS_${PN} += "${ROS_EXEC_DEPENDS}"

SRC_URI = "https://github.com/aws-gbp/health_metric_collector-release/archive/release/dashing/health_metric_collector/3.0.1-1.tar.gz;downloadfilename=${ROS_SP}.tar.gz"
SRC_URI[md5sum] = "90ab69ef7e9af65cbdb5310f7b94bbdb"
SRC_URI[sha256sum] = "d990ce74d624c58a8cd2be31c27171bb3a867a9aed6449ff1075b1224e940497"
S = "${WORKDIR}/health_metric_collector-release-release-dashing-health_metric_collector-3.0.1-1"

ROS_COMPONENT_TYPE = "${@ros_distro__get_component_type('health-metric-collector', d)}"
ROS_BUILD_TYPE = "ament_cmake"

# Allow the above settings to be overridden.
ROS_INCLUDES_TREE := "${@ros_superflore_generated__get_includes_tree('health-metric-collector', d)}"
include ${ROS_LAYERDIR}/${ROS_INCLUDES_TREE}/health-metric-collector/health-metric-collector_common.inc
include ${ROS_LAYERDIR}/${ROS_INCLUDES_TREE}/health-metric-collector/health-metric-collector-${PV}_common.inc
include ${ROS_LAYERDIR}/${ROS_INCLUDES_TREE}/health-metric-collector/${BPN}.inc
include ${ROS_LAYERDIR}/${ROS_INCLUDES_TREE}/health-metric-collector/${BPN}-${PV}.inc

inherit ${ROS_COMPONENT_TYPE}_component
inherit ros_${ROS_BUILD_TYPE}
