From 702be6ca99464b10c6326a33b35c1b0d863f2a89 Mon Sep 17 00:00:00 2001
From: Dmitry Rozhkov <dmitry.rozhkov@linux.intel.com>
Date: Tue, 23 May 2017 10:01:06 +0300
Subject: [PATCH 1/3] address gcc6 build error

With gcc6, compiling fails with `stdlib.h: No such file or directory`,
as including '-isystem /usr/include' breaks with gcc6, cf.,
https://gcc.gnu.org/bugzilla/show_bug.cgi?id=70129.

This commit addresses this issue for this package in almost the same way
it was addressed in various other ROS packages. A list of related
commits and pull requests is at:

    https://github.com/ros/rosdistro/issues/12783

Particularly when searching for the Boost library CMake sets
Boost_INCLUDE_DIRS to @SYSROOT@/usr/include which should be
avoided in the `-isystem` option of gcc.

Upstream-Status: Backport [expected in version >1.3.1]

Commit https://github.com/ompl/ompl/commit/2a9cabe000341e7f was
cherry-picked and adjusted for version 1.2.2.

Signed-off-by: Lukas Bulwahn <lukas.bulwahn@gmail.com>
---
 CMakeLists.txt | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 223e123..71e6f10 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -63,7 +63,7 @@ else(IS_ICPC)
 endif(IS_ICPC)
 
 find_package(Boost 1.54 COMPONENTS serialization filesystem system program_options unit_test_framework REQUIRED)
-include_directories(SYSTEM ${Boost_INCLUDE_DIR})
+include_directories(${Boost_INCLUDE_DIR})
 
 # on OS X we need to check whether to use libc++ or libstdc++ with clang++
 if(APPLE AND CMAKE_CXX_COMPILER_ID STREQUAL "Clang")
-- 
2.7.4

